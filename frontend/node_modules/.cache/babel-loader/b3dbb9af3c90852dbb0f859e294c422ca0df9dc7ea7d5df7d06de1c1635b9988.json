{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diego\\\\source\\\\repos\\\\PrograWEBEv\\\\frontend\\\\src\\\\screens\\\\Login.js\",\n  _s = $RefreshSig$();\n// src/screens/Login.js\nimport React, { useState } from 'react';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\nimport Form from '../components/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = e => {\n    e.preventDefault();\n    // Aquí va el código para enviar la información al backend\n    console.log('Login con:', email, password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Iniciar sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Correo electr\\xF3nico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Iniciar sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Input","Button","Form","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","handleLogin","e","preventDefault","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","text","_c","$RefreshReg$"],"sources":["C:/Users/diego/source/repos/PrograWEBEv/frontend/src/screens/Login.js"],"sourcesContent":["// src/screens/Login.js\r\nimport React, { useState } from 'react';\r\nimport Input from '../components/Input';\r\nimport Button from '../components/Button';\r\nimport Form from '../components/Form';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    // Aquí va el código para enviar la información al backend\r\n    console.log('Login con:', email, password);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Iniciar sesión</h2>\r\n      <Form onSubmit={handleLogin}>\r\n        <Input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Correo electrónico\"\r\n        />\r\n        <Input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Contraseña\"\r\n        />\r\n        <Button text=\"Iniciar sesión\" />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,IAAI,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,WAAW,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACAC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAER,KAAK,EAAEE,QAAQ,CAAC;EAC5C,CAAC;EAED,oBACEL,OAAA;IAAKY,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9Bb,OAAA;MAAAa,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBjB,OAAA,CAACF,IAAI;MAACoB,QAAQ,EAAEX,WAAY;MAAAM,QAAA,gBAC1Bb,OAAA,CAACJ,KAAK;QACJuB,IAAI,EAAC,OAAO;QACZC,KAAK,EAAEjB,KAAM;QACbkB,QAAQ,EAAGb,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC;MAAoB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACFjB,OAAA,CAACJ,KAAK;QACJuB,IAAI,EAAC,UAAU;QACfC,KAAK,EAAEf,QAAS;QAChBgB,QAAQ,EAAGb,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE;QAC7CG,WAAW,EAAC;MAAY;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACFjB,OAAA,CAACH,MAAM;QAAC2B,IAAI,EAAC;MAAgB;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACf,EAAA,CA9BID,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AAgCX,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}