{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diego\\\\source\\\\repos\\\\PrograWEBEv\\\\frontend\\\\src\\\\screens\\\\ProjectList.js\",\n  _s = $RefreshSig$();\n// src/screens/ProjectList.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectList = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n\n  // Aquí iría el código para obtener los proyectos de la API (luego de configurar las rutas)\n  useEffect(() => {\n    // Simulamos un listado de proyectos por ahora\n    setProjects([{\n      id: 1,\n      title: 'Proyecto A',\n      description: 'Descripción del proyecto A'\n    }, {\n      id: 2,\n      title: 'Proyecto B',\n      description: 'Descripción del proyecto B'\n    }]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Listado de Proyectos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectList, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n_c = ProjectList;\nexport default ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ProjectList","_s","projects","setProjects","id","title","description","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","_c","$RefreshReg$"],"sources":["C:/Users/diego/source/repos/PrograWEBEv/frontend/src/screens/ProjectList.js"],"sourcesContent":["// src/screens/ProjectList.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst ProjectList = () => {\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  // Aquí iría el código para obtener los proyectos de la API (luego de configurar las rutas)\r\n  useEffect(() => {\r\n    // Simulamos un listado de proyectos por ahora\r\n    setProjects([\r\n      { id: 1, title: 'Proyecto A', description: 'Descripción del proyecto A' },\r\n      { id: 2, title: 'Proyecto B', description: 'Descripción del proyecto B' },\r\n    ]);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"project-list-container\">\r\n      <h2>Listado de Proyectos</h2>\r\n      <ul>\r\n        {projects.map(project => (\r\n          <li key={project.id}>\r\n            <h3>{project.title}</h3>\r\n            <p>{project.description}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd;IACAM,WAAW,CAAC,CACV;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,YAAY;MAAEC,WAAW,EAAE;IAA6B,CAAC,EACzE;MAAEF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,YAAY;MAAEC,WAAW,EAAE;IAA6B,CAAC,CAC1E,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKQ,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCT,OAAA;MAAAS,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7Bb,OAAA;MAAAS,QAAA,EACGN,QAAQ,CAACW,GAAG,CAACC,OAAO,iBACnBf,OAAA;QAAAS,QAAA,gBACET,OAAA;UAAAS,QAAA,EAAKM,OAAO,CAACT;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBb,OAAA;UAAAS,QAAA,EAAIM,OAAO,CAACR;QAAW;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFrBE,OAAO,CAACV,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACX,EAAA,CAzBID,WAAW;AAAAe,EAAA,GAAXf,WAAW;AA2BjB,eAAeA,WAAW;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}