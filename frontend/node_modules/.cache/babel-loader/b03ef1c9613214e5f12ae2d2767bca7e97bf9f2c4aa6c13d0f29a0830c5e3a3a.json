{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diego\\\\source\\\\repos\\\\PrograWEBEv\\\\frontend\\\\src\\\\screens\\\\Register.js\",\n  _s = $RefreshSig$();\n// src/screens/Register.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from '../axios';\nimport Button from '../components/Button';\nimport Input from '../components/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('/api/auth/register', formData);\n      alert('Registro exitoso');\n      navigate('/login');\n    } catch (error) {\n      alert('Error al registrarse');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registrarse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        name: \"username\",\n        value: formData.username,\n        onChange: handleChange,\n        placeholder: \"Nombre de usuario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange,\n        placeholder: \"Correo electr\\xF3nico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange,\n        placeholder: \"Contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"btn-primary\",\n        children: \"Registrarse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => navigate('/login'),\n      className: \"btn-secondary\",\n      children: \"Volver al login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"SMSTLxORr78PjCMckKchjmTgKeU=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","axios","Button","Input","jsxDEV","_jsxDEV","Register","_s","navigate","formData","setFormData","username","email","password","handleChange","e","target","name","value","handleSubmit","preventDefault","post","alert","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/diego/source/repos/PrograWEBEv/frontend/src/screens/Register.js"],"sourcesContent":["// src/screens/Register.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from '../axios';\r\nimport Button from '../components/Button';\r\nimport Input from '../components/Input';\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('/api/auth/register', formData);\r\n      alert('Registro exitoso');\r\n      navigate('/login');\r\n    } catch (error) {\r\n      alert('Error al registrarse');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <h2>Registrarse</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={formData.username}\r\n          onChange={handleChange}\r\n          placeholder=\"Nombre de usuario\"\r\n        />\r\n        <Input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          placeholder=\"Correo electrónico\"\r\n        />\r\n        <Input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          placeholder=\"Contraseña\"\r\n        />\r\n        <Button type=\"submit\" className=\"btn-primary\">Registrarse</Button>\r\n      </form>\r\n      <Button onClick={() => navigate('/login')} className=\"btn-secondary\">Volver al login</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,UAAU;AAC5B,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC;IACvCY,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BL,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACM,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAC5B,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMnB,KAAK,CAACoB,IAAI,CAAC,oBAAoB,EAAEZ,QAAQ,CAAC;MAChDa,KAAK,CAAC,kBAAkB,CAAC;MACzBd,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdD,KAAK,CAAC,sBAAsB,CAAC;IAC/B;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKmB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCpB,OAAA;MAAAoB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBxB,OAAA;MAAMyB,QAAQ,EAAEX,YAAa;MAAAM,QAAA,gBAC3BpB,OAAA,CAACF,KAAK;QACJ4B,IAAI,EAAC,MAAM;QACXd,IAAI,EAAC,UAAU;QACfC,KAAK,EAAET,QAAQ,CAACE,QAAS;QACzBqB,QAAQ,EAAElB,YAAa;QACvBmB,WAAW,EAAC;MAAmB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFxB,OAAA,CAACF,KAAK;QACJ4B,IAAI,EAAC,OAAO;QACZd,IAAI,EAAC,OAAO;QACZC,KAAK,EAAET,QAAQ,CAACG,KAAM;QACtBoB,QAAQ,EAAElB,YAAa;QACvBmB,WAAW,EAAC;MAAoB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACFxB,OAAA,CAACF,KAAK;QACJ4B,IAAI,EAAC,UAAU;QACfd,IAAI,EAAC,UAAU;QACfC,KAAK,EAAET,QAAQ,CAACI,QAAS;QACzBmB,QAAQ,EAAElB,YAAa;QACvBmB,WAAW,EAAC;MAAY;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACFxB,OAAA,CAACH,MAAM;QAAC6B,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,eACPxB,OAAA,CAACH,MAAM;MAACgC,OAAO,EAAEA,CAAA,KAAM1B,QAAQ,CAAC,QAAQ,CAAE;MAACgB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1F,CAAC;AAEV,CAAC;AAACtB,EAAA,CAxDID,QAAQ;EAAA,QACKN,WAAW;AAAA;AAAAmC,EAAA,GADxB7B,QAAQ;AA0Dd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}