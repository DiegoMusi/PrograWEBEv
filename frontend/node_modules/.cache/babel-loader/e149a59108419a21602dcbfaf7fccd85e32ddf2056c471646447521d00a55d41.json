{"ast":null,"code":"import axios from 'axios';\n\n// Aquí se define la URL base de la API\nconst instance = axios.create({\n  baseURL: 'http://localhost:5000'\n});\n\n// Configura un interceptor para agregar el token JWT a las peticiones, si está disponible\ninstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token'); // Obtener el token de localStorage\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`; // Agregamos el token a la cabecera\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject"],"sources":["C:/Users/diego/source/repos/PrograWEBEv/frontend/src/axios.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Aquí se define la URL base de la API\r\nconst instance = axios.create({\r\n  baseURL: 'http://localhost:5000',\r\n});\r\n\r\n// Configura un interceptor para agregar el token JWT a las peticiones, si está disponible\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token'); // Obtener el token de localStorage\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`; // Agregamos el token a la cabecera\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,QAAQ,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE,CAAC,CAAC;EACvD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeX,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}