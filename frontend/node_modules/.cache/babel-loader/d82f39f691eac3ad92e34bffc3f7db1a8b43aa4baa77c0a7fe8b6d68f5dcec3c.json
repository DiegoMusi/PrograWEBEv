{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diego\\\\source\\\\repos\\\\PrograWEBEv\\\\frontend\\\\src\\\\screens\\\\ProjectList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from '../axios'; // Asegúrate de que la ruta de axios es correcta\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectList = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [search, setSearch] = useState('');\n  const [filteredProjects, setFilteredProjects] = useState([]);\n  useEffect(() => {\n    // Cargar los proyectos del backend\n    const fetchProjects = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('/api/projects', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setProjects(response.data);\n      } catch (error) {\n        console.error('Error al obtener los proyectos:', error);\n      }\n    };\n    fetchProjects();\n  }, []);\n  useEffect(() => {\n    // Filtrar los proyectos cuando se cambie el valor de búsqueda\n    setFilteredProjects(projects.filter(project => project.title.toLowerCase().includes(search.toLowerCase()) || project.description.toLowerCase().includes(search.toLowerCase())));\n  }, [search, projects]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Listado de Proyectos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Buscar proyectos...\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredProjects.length > 0 ? filteredProjects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: project.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)]\n      }, project._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No se encontraron proyectos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectList, \"HFm0KO1ZKWg0iXdKWEBeBBtyVMc=\");\n_c = ProjectList;\nexport default ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ProjectList","_s","projects","setProjects","search","setSearch","filteredProjects","setFilteredProjects","fetchProjects","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","filter","project","title","toLowerCase","includes","description","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","length","map","_id","_c","$RefreshReg$"],"sources":["C:/Users/diego/source/repos/PrograWEBEv/frontend/src/screens/ProjectList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from '../axios'; // Asegúrate de que la ruta de axios es correcta\r\n\r\nconst ProjectList = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [filteredProjects, setFilteredProjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Cargar los proyectos del backend\r\n    const fetchProjects = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get('/api/projects', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setProjects(response.data);\r\n      } catch (error) {\r\n        console.error('Error al obtener los proyectos:', error);\r\n      }\r\n    };\r\n\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Filtrar los proyectos cuando se cambie el valor de búsqueda\r\n    setFilteredProjects(\r\n      projects.filter(project =>\r\n        project.title.toLowerCase().includes(search.toLowerCase()) ||\r\n        project.description.toLowerCase().includes(search.toLowerCase())\r\n      )\r\n    );\r\n  }, [search, projects]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Listado de Proyectos</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Buscar proyectos...\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      />\r\n      <div>\r\n        {filteredProjects.length > 0 ? (\r\n          filteredProjects.map((project) => (\r\n            <div key={project._id}>\r\n              <h2>{project.title}</h2>\r\n              <p>{project.description}</p>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No se encontraron proyectos.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}